// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopApplication.Entity;

#nullable disable

namespace ShopApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopApplication.Models.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categorycode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae036a8a-761a-4a81-9f17-ea6eba567581"),
                            Name = "B0VZ",
                            categorycode = "M2DOYTTS"
                        },
                        new
                        {
                            Id = new Guid("3a3feed4-b72a-4a67-9d05-fb0b0ae56301"),
                            Name = "CKTX",
                            categorycode = "EDS38DZ4"
                        },
                        new
                        {
                            Id = new Guid("ad13b95b-4dc2-45d5-a54e-67975e838dad"),
                            Name = "32WM",
                            categorycode = "0GDVYHNZ"
                        },
                        new
                        {
                            Id = new Guid("369517c8-8caa-4e68-89d7-6736d1e0ea08"),
                            Name = "I7WR",
                            categorycode = "JHDN3HCZ"
                        },
                        new
                        {
                            Id = new Guid("5b70c998-93a5-4420-afaf-a9ab9ac912e9"),
                            Name = "514Z",
                            categorycode = "OYRYXGY1"
                        },
                        new
                        {
                            Id = new Guid("ca077b7a-1535-4612-be36-a132a48e796e"),
                            Name = "ZOIJ",
                            categorycode = "LOSKVF11"
                        },
                        new
                        {
                            Id = new Guid("03e59e58-ba5f-4074-a625-4bee423d7e29"),
                            Name = "HU89",
                            categorycode = "OLOEQBTL"
                        },
                        new
                        {
                            Id = new Guid("f9a2ccc6-10e1-4931-8604-5721ca60bf7c"),
                            Name = "Y8TY",
                            categorycode = "I0XTAP9C"
                        },
                        new
                        {
                            Id = new Guid("0d217c74-f27b-409b-9d75-a394e901f4cf"),
                            Name = "V7SM",
                            categorycode = "MCLULXRP"
                        },
                        new
                        {
                            Id = new Guid("f8671dd0-6fcc-4dbe-98df-6e5159575e98"),
                            Name = "PCR7",
                            categorycode = "HLMTM4LS"
                        });
                });

            modelBuilder.Entity("ShopApplication.Models.ProductReceipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.Property<string>("SubmitDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReceipts", (string)null);
                });

            modelBuilder.Entity("ShopApplication.Models.ProductTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.Property<string>("SubmitDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTransfers", (string)null);
                });

            modelBuilder.Entity("ShopApplication.Models.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("ShopApplication.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0604966-bf0d-4acc-ba69-da7a6910502c"),
                            Email = "0N8PUHI0@gmail.com",
                            Name = "VL3D",
                            Password = "27SC8GU6QH"
                        },
                        new
                        {
                            Id = new Guid("68eb1dd9-4eb9-49d5-b05e-e0c481205a3f"),
                            Email = "F3V74YAD@gmail.com",
                            Name = "YJNC",
                            Password = "Y8K17E8R13"
                        },
                        new
                        {
                            Id = new Guid("ad13aaaa-413e-43e1-9e67-de0fb92d8b9e"),
                            Email = "WJQOJ8XK@gmail.com",
                            Name = "YF0D",
                            Password = "71V9GCEWFY"
                        },
                        new
                        {
                            Id = new Guid("92522f59-42f4-4aad-9514-7be68006e8e0"),
                            Email = "EF2EF0EG@gmail.com",
                            Name = "HNCR",
                            Password = "E3SYU43JZD"
                        },
                        new
                        {
                            Id = new Guid("669e9354-b5f9-439f-b5e7-c9ab7124cfad"),
                            Email = "CSGR4UHX@gmail.com",
                            Name = "LOYZ",
                            Password = "5ZZICRWITT"
                        },
                        new
                        {
                            Id = new Guid("3aeea810-c170-441d-8c23-1fc066f2164f"),
                            Email = "2XA9BT7P@gmail.com",
                            Name = "F9AL",
                            Password = "4A0GQX4MO9"
                        },
                        new
                        {
                            Id = new Guid("03622de5-3275-4cde-bb98-8de03a2ba24b"),
                            Email = "QFECWW7K@gmail.com",
                            Name = "VWGO",
                            Password = "XJGETXMIHV"
                        },
                        new
                        {
                            Id = new Guid("3685e699-90dd-4c5f-be43-413141210f4f"),
                            Email = "N6E66PUM@gmail.com",
                            Name = "ZOJW",
                            Password = "KML645DESM"
                        },
                        new
                        {
                            Id = new Guid("3e49f704-207f-423a-9d68-a788f396af75"),
                            Email = "V3XIMAS7@gmail.com",
                            Name = "P9LR",
                            Password = "IL5G8OY37O"
                        },
                        new
                        {
                            Id = new Guid("086b534a-b46b-4fed-9fb6-ae51676077bb"),
                            Email = "9JWYIU98@gmail.com",
                            Name = "ZFTU",
                            Password = "HPQQZ1F1JG"
                        },
                        new
                        {
                            Id = new Guid("e97888bc-49e1-4031-92b8-d7ff795ee963"),
                            Email = "9Y56OXY7@gmail.com",
                            Name = "5P2H",
                            Password = "FPK0YX7YF2"
                        },
                        new
                        {
                            Id = new Guid("1c3b79d1-4e21-4868-a40d-c2e3d94a4495"),
                            Email = "7IIQR3H6@gmail.com",
                            Name = "5ZAN",
                            Password = "AEAWVG13F3"
                        },
                        new
                        {
                            Id = new Guid("b90f56e9-d6b6-4f8d-a466-c51925d50fa6"),
                            Email = "NDL6L8DF@gmail.com",
                            Name = "W0GA",
                            Password = "VCWMQD03RK"
                        },
                        new
                        {
                            Id = new Guid("991499b9-54e7-45a8-83fd-5ceeee665d9e"),
                            Email = "55MU3XB2@gmail.com",
                            Name = "KY1B",
                            Password = "2JJ1MGTP77"
                        },
                        new
                        {
                            Id = new Guid("474887d0-2c9b-49bb-999a-22a8e9581c52"),
                            Email = "7G11XZCT@gmail.com",
                            Name = "67ET",
                            Password = "RE7XOJJ8W0"
                        },
                        new
                        {
                            Id = new Guid("d652ad43-b32f-4cab-a296-08086a5ea99f"),
                            Email = "IYS18HG9@gmail.com",
                            Name = "UT0Z",
                            Password = "DR7PIK9A1P"
                        },
                        new
                        {
                            Id = new Guid("325a6afc-fbb8-4cac-912c-34125837fc3f"),
                            Email = "NM6HVUSE@gmail.com",
                            Name = "BBRC",
                            Password = "AHP3DTQPX1"
                        },
                        new
                        {
                            Id = new Guid("2a1bea2e-7083-44a9-962e-fcd1b2e68c97"),
                            Email = "PTEEWS07@gmail.com",
                            Name = "OW3X",
                            Password = "9T7248AY37"
                        },
                        new
                        {
                            Id = new Guid("d7e6fd7d-a2e2-43d1-b149-ffc2bc614353"),
                            Email = "2VS7YSLN@gmail.com",
                            Name = "ZPZX",
                            Password = "JJ288ZCM1F"
                        },
                        new
                        {
                            Id = new Guid("84d3abcc-0e31-4eb7-bb89-eb8b59e9bfdd"),
                            Email = "1FA4MPHS@gmail.com",
                            Name = "TS47",
                            Password = "RWZ8922AP1"
                        });
                });

            modelBuilder.Entity("ShopApplication.Models.ProductReceipt", b =>
                {
                    b.HasOne("ShopApplication.Models.Products", "Products")
                        .WithMany("ProductReceipt")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopApplication.Models.ProductTransfer", b =>
                {
                    b.HasOne("ShopApplication.Models.Products", "Products")
                        .WithMany("productTransfers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopApplication.Models.Products", b =>
                {
                    b.HasOne("ShopApplication.Models.ProductCategory", "productCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productCategory");
                });

            modelBuilder.Entity("ShopApplication.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopApplication.Models.Products", b =>
                {
                    b.Navigation("ProductReceipt");

                    b.Navigation("productTransfers");
                });
#pragma warning restore 612, 618
        }
    }
}
